/*
 2018 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 2.1.2
*/
"use strict";(function(a){function b(a){return void 0!==a}function c(a){return new e(a)}function d(){return new f}class e{constructor(a){this.value=a,this.edges={}}}class f{constructor(){this.nodes={}}add(a,c){let d=!1;return b(this.nodes[a])&&b(this.nodes[c])&&(this.nodes[a].edges[c]=this.nodes[c].edges[a]=null,d=!0),d}adjacent(a,c){const d=this.nodes[a];let e=!1;return b(d)&&(e=b(d.edges[c])),e}del(a,c){let d=!1;return b(this.nodes[a])&&b(this.nodes[a].edges[c])&&(delete this.nodes[a].edges[c],delete this.nodes[c].edges[a],d=!0),d}delNode(a){const c=this.nodes[a];let d=!1;return b(c)&&(Object.keys(c.edges).forEach((b)=>{delete this.nodes[b].edges[a]}),delete this.nodes[a],d=!0),d}fromJSON(a){return this.nodes=JSON.parse(a),this}getEdgeValue(a,c){const d=this.nodes[a];let e;return b(d)&&b(d.edges[c])&&(e=d.edges[c]),e}getNodeValue(a){const c=this.nodes[a];let d;return b(c)&&(d=c.value),d}neighbors(a){const c=this.nodes[a];return b(c)?Object.keys(c.edges):[]}setEdgeValue(a,c,d){let e=!1;return b(this.nodes[a])&&b(this.nodes[a].edges[c])&&(this.nodes[a].edges[c]=this.nodes[c].edges[a]=b(d)?d:null,e=!0),e}setNodeValue(a,d){const e=this.nodes[a];return d=b(d)?d:null,e?e.value=d:this.nodes[a]=c(d),!0}toJSON(a=0){return JSON.stringify(this.nodes,null,a)}}d.version="2.1.2","undefined"==typeof exports?"function"==typeof define&&void 0!==define.amd?define(()=>d):a.graph=d:module.exports=d})("undefined"==typeof window?global:window);
//# sourceMappingURL=tiny-graph.min.js.map