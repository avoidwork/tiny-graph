{"version":3,"file":"tiny-graph.min.js","sources":["tiny-graph.js"],"names":["_prototypeProperties","child","staticProps","instanceProps","Object","defineProperties","prototype","global","Node","value","this","edges","Graph","nodes","adjacent","x","y","n","defined","writable","enumerable","configurable","neighbors","keys","add","del","del_node","self","forEach","get_node_value","undefined","set_node_value","v","node","get_edge_value","set_edge_value","arg","graph","exports","module","define"],"mappings":";;;;AAAA,YAEA,IAAIA,sBAAuB,SAAUC,EAAOC,EAAaC,GACnDD,GAAaE,OAAOC,iBAAiBJ,EAAOC,GAC5CC,GAAeC,OAAOC,iBAAiBJ,EAAMK,UAAWH,KAa9D,SAAWI,GACT,GAAIC,MAAO,SAAcC,GACvBC,KAAKD,MAAQA,EACbC,KAAKC,UAGHC,MAAQ,WACV,QAASA,SACPF,KAAKG,SA2IP,MAxIAb,sBAAqBY,MAAO,MAC1BE,UACEL,MAAO,SAAkBM,EAAGC,GAC1B,GAAIC,GAAIP,KAAKG,MAAME,EAEnB,OAAIG,GAAQD,GACHC,EAAQD,EAAEN,MAAMK,KAGlB,GAETG,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBC,WACEb,MAAO,SAAmBM,GACxB,GAAIE,GAAIP,KAAKG,MAAME,EAEnB,OAAIG,GAAQD,GACHb,OAAOmB,KAAKN,EAAEN,WAKzBQ,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBG,KACEf,MAAO,SAAaM,EAAGC,GACrB,MAAIE,GAAQR,KAAKG,MAAME,KAAOG,EAAQR,KAAKG,MAAMG,KAC/CN,KAAKG,MAAME,GAAGJ,MAAMK,GAAKN,KAAKG,MAAMG,GAAGL,MAAMI,GAAK,MAC3C,IAGF,GAETI,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBI,KACEhB,MAAO,SAAaM,EAAGC,GACrB,MAAIE,GAAQR,KAAKG,MAAME,KAAOG,EAAQR,KAAKG,MAAME,GAAGJ,MAAMK,WACjDN,MAAKG,MAAME,GAAGJ,MAAMK,SACpBN,MAAKG,MAAMG,GAAGL,MAAMI,IACpB,IAGF,GAETI,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBK,UACEjB,MAAO,SAAiBM,GACtB,GAAIY,GAAOjB,KACPO,EAAIP,KAAKG,MAAME,EAEnB,OAAIG,GAAQD,IACVb,OAAOmB,KAAKN,EAAEN,OAAOiB,QAAQ,SAAUZ,SAC9BW,GAAKd,MAAMG,GAAGL,MAAMI,WAEtBL,MAAKG,MAAME,IACX,IAGF,GAETI,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBQ,gBACEpB,MAAO,SAAsBM,GAC3B,GAAIE,GAAIP,KAAKG,MAAME,EAEnB,OAAIG,GAAQD,GACHA,EAAER,MAGJqB,QAETX,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBU,gBACEtB,MAAO,SAAsBM,EAAGiB,GAC9B,GAAIf,GAAIP,KAAKG,MAAME,EAUnB,OARAiB,GAAId,EAAQc,GAAKA,EAAI,KAEjBf,EACFA,EAAER,MAAQuB,EAEVtB,KAAKG,MAAME,GAAKkB,EAAKD,IAGhB,GAETb,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBa,gBACEzB,MAAO,SAAsBM,EAAGC,GAC9B,GAAIC,GAAIP,KAAKG,MAAME,EAEnB,OAAIG,GAAQD,IAAMC,EAAQD,EAAEN,MAAMK,IACzBC,EAAEN,MAAMK,GAGVc,QAETX,UAAU,EACVC,YAAY,EACZC,cAAc,GAEhBc,gBACE1B,MAAO,SAAsBM,EAAGC,EAAGgB,GACjC,MAAId,GAAQR,KAAKG,MAAME,KAAOG,EAAQR,KAAKG,MAAME,GAAGJ,MAAMK,KACxDN,KAAKG,MAAME,GAAGJ,MAAMK,GAAKN,KAAKG,MAAMG,GAAGL,MAAMI,GAAKG,EAAQc,GAAKA,EAAI,MAC5D,IAGF,GAETb,UAAU,EACVC,YAAY,EACZC,cAAc,KAIXT,SAGLM,EAAU,SAAUkB,GACtB,MAAeN,UAARM,GAGLC,EAAQ,WACV,MAAO,IAAIzB,QAGTqB,EAAO,SAAUxB,GACnB,MAAO,IAAID,MAAKC,GAGI,oBAAX6B,SACTC,OAAOD,QAAUD,EACS,kBAAVG,QAChBA,OAAO,WACL,MAAOH,KAGT9B,EAAO8B,MAAQA,GAEhB3B","sourcesContent":["\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/**\n * Tiny graph data structure for Client or Server\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2015 Jason Mulligan\n * @license BSD-3 <https://raw.github.com/avoidwork/tiny-graph/master/LICENSE>\n * @link http://avoidwork.github.io/tiny-graph\n * @module tiny-graph\n * @version 1.1.0\n */\n(function (global) {\n  var Node = function Node(value) {\n    this.value = value;\n    this.edges = {};\n  };\n\n  var Graph = (function () {\n    function Graph() {\n      this.nodes = {};\n    }\n\n    _prototypeProperties(Graph, null, {\n      adjacent: {\n        value: function adjacent(x, y) {\n          var n = this.nodes[x];\n\n          if (defined(n)) {\n            return defined(n.edges[y]);\n          }\n\n          return false;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      neighbors: {\n        value: function neighbors(x) {\n          var n = this.nodes[x];\n\n          if (defined(n)) {\n            return Object.keys(n.edges);\n          }\n\n          return [];\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      add: {\n        value: function add(x, y) {\n          if (defined(this.nodes[x]) && defined(this.nodes[y])) {\n            this.nodes[x].edges[y] = this.nodes[y].edges[x] = null;\n            return true;\n          }\n\n          return false;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      del: {\n        value: function del(x, y) {\n          if (defined(this.nodes[x]) && defined(this.nodes[x].edges[y])) {\n            delete this.nodes[x].edges[y];\n            delete this.nodes[y].edges[x];\n            return true;\n          }\n\n          return false;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      del_node: {\n        value: function delNode(x) {\n          var self = this;\n          var n = this.nodes[x];\n\n          if (defined(n)) {\n            Object.keys(n.edges).forEach(function (y) {\n              delete self.nodes[y].edges[x];\n            });\n            delete this.nodes[x];\n            return true;\n          }\n\n          return false;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      get_node_value: {\n        value: function getNodeValue(x) {\n          var n = this.nodes[x];\n\n          if (defined(n)) {\n            return n.value;\n          }\n\n          return undefined;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      set_node_value: {\n        value: function setNodeValue(x, v) {\n          var n = this.nodes[x];\n\n          v = defined(v) ? v : null;\n\n          if (n) {\n            n.value = v;\n          } else {\n            this.nodes[x] = node(v);\n          }\n\n          return true;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      get_edge_value: {\n        value: function getEdgeValue(x, y) {\n          var n = this.nodes[x];\n\n          if (defined(n) && defined(n.edges[y])) {\n            return n.edges[y];\n          }\n\n          return undefined;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      },\n      set_edge_value: {\n        value: function setEdgeValue(x, y, v) {\n          if (defined(this.nodes[x]) && defined(this.nodes[x].edges[y])) {\n            this.nodes[x].edges[y] = this.nodes[y].edges[x] = defined(v) ? v : null;\n            return true;\n          }\n\n          return false;\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true\n      }\n    });\n\n    return Graph;\n  })();\n\n  var defined = function (arg) {\n    return arg !== undefined;\n  };\n\n  var graph = function () {\n    return new Graph();\n  };\n\n  var node = function (value) {\n    return new Node(value);\n  };\n\n  if (typeof exports != \"undefined\") {\n    module.exports = graph;\n  } else if (typeof define == \"function\") {\n    define(function () {\n      return graph;\n    });\n  } else {\n    global.graph = graph;\n  }\n})(this);"]}